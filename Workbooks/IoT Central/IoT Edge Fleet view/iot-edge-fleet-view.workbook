{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{resource}"
        ],
        "parameters": [
          {
            "id": "31596d7b-c0a9-448f-b3cc-a3a906cb9d48",
            "version": "KqlParameterItem/1.0",
            "name": "resourceType",
            "type": 7,
            "isRequired": true,
            "isGlobal": true,
            "value": "Microsoft.IoTCentral/IoTApps",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\"Microsoft.IoTCentral/IoTApps\"]",
            "defaultValue": "value::1"
          },
          {
            "id": "bebd5be4-3d61-45ed-9f07-b9ae091e1ccb",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1"
          },
          {
            "id": "d062cb40-2eed-4917-ab42-8f271db98312",
            "version": "KqlParameterItem/1.0",
            "name": "InsightsMetricsExists",
            "type": 1,
            "query": "let hasNonEmptyTable = (T:string) \n{ \n   toscalar( union isfuzzy=true ( table(T) | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\n};\nlet TableName = 'InsightsMetrics';\nprint IsPresent=iif(hasNonEmptyTable(TableName), \"yes\", \"no\")",
            "crossComponentResources": [
              "{resource}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 259200000
            },
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "36a641eb-587a-40c0-b491-b7b2f85eb0c0",
            "version": "KqlParameterItem/1.0",
            "name": "mainAction",
            "type": 1,
            "isGlobal": true,
            "value": "devicelist",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "parameters - 5"
    },
    {
      "type": 1,
      "content": {
        "json": "# No metrics data from IoT Edge devices detected in the last 3 days\n\n## Please on-board with instructions at **[aka.ms/edgemon-docs](https://aka.ms/edgemon-docs)**\n\n<br>\nðŸ’¡*If you've just on-boarded,  it can take up to 15 minutes for data to be displayed.*"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "name": "text - 6"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1b4b2d2e-4f2e-4881-903d-f307d6958a1c",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "30",
      "name": "parameters - 1 - Copy"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "43e6b34f-ad6a-46d3-bc57-495d4599013c",
            "version": "KqlParameterItem/1.0",
            "name": "ShowTips",
            "label": "â„¹",
            "type": 10,
            "isRequired": true,
            "isGlobal": true,
            "value": "No",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\"No\", \"Yes\"]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "formHorizontal",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "30",
      "name": "showtips",
      "styleSettings": {
        "margin": "5px 0px 0px 0px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "**Click Device name in Hive cell to see device snapshot.** You can modify the thresholds for \"health\" or define your own by editing the query. See https://aka.ms/edgemon-customize-visuals for more info.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "InsightsMetricsExists",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "ShowTips",
                      "comparison": "isEqualTo",
                      "value": "Yes"
                    }
                  ],
                  "name": "device-list-main-tip",
                  "styleSettings": {
                    "padding": "12px 0px 0px 0px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Set thresholds\nlet hostMemPercentThreshold = 80;\nlet hostCpuPercentThreshold = 80;\nlet hostDiskPercentThreshold = 90;\nlet localMessagesSentThreshold = 0;\nlet upstreamMessagesSentThreshold = 0;\nlet qlenThreshold = 100;\nlet noDataPanicThreshold1Minutes = 30;\nlet noDataPanicThreshold2Minutes = 120;\nlet timeBin = 5m; // set to how often the devices send data\nlet startTime = {timeRange:start};\nlet endTime =  {timeRange:end};\n//query\nlet cpu_percent = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"host\" and Tags contains \"0.99\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = toint(Val)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1)\n    | project-away Ignore*\n    | summarize p95HostCpu=max(value) by device;\nlet totalMemByDevice = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_total_memory_bytes\" and Tags contains \"host\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = tolong(Val)\n    | project device, value, TimeGenerated\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1)\n    | project-away Ignore*\n    | summarize total_bytes=max(value) by device;\nlet memUsedPercent = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of Val by Ignore2=max(1)\n    | project-away Ignore*\n    | extend used_bytes = tolong(Val) \n    | project device, used_bytes, TimeGenerated\n    | join kind=leftouter totalMemByDevice on $left.device == $right.device\n    | extend mem_used_percent = (todouble(used_bytes) / todouble(total_bytes)) * 100\n    | extend mem_used_percent = round(mem_used_percent, 0)\n    | summarize p95HostMem=max(mem_used_percent) by device;\nlet cpu_and_mem = memUsedPercent\n    | join cpu_percent on $left.device == $right.device\n    | project-away device1;\nlet totalBytesByDevice = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_total_disk_space_bytes\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = tolong(Val)\n    | extend diskname = tostring(dimensions.disk_name)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1),\n    top-nested of diskname by Ignore3=max(1)\n    | project-away Ignore*\n    | project device, diskname, value, TimeGenerated\n    | summarize Bytes=max(value) by device, diskname\n    | summarize totalBytes=sum(Bytes) by device;\nlet used_disk_trend = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_available_disk_space_bytes\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = tolong(Val)\n    | extend diskname = tostring(dimensions.disk_name)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1),\n    top-nested of diskname by Ignore3=max(1)\n    | project-away Ignore*\n    | project device, diskname, value, TimeGenerated\n    | summarize Bytes=max(value) by device, diskname, TimeGenerated\n    | summarize availBytes=sum(Bytes) by device, TimeGenerated\n    | join kind=leftouter\n        totalBytesByDevice\n        on $left.device == $right.device\n    | extend percentUsed = round((todouble(totalBytes) - todouble(availBytes)) / todouble(totalBytes) * 100, 0)\n    | project TimeGenerated, device, percentUsed\n    | summarize p95Disk=max(percentUsed) by device;\nlet cpu_mem_disk = cpu_and_mem\n    | join\n        used_disk_trend\n        on $left.device == $right.device\n    | project-away device1;\nlet p95QlenByDevice = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where TimeGenerated < endTime\n    | where Name == \"edgehub_queue_length\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend ep = tostring(dimensions.endpoint)\n    | extend qlen = toint(Val)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of qlen by Ignore2=max(1),\n    top-nested of ep by Ignore3=max(1)\n    | project-away Ignore*\n    | project device, qlen, ep, TimeGenerated\n    | summarize sum(qlen) by TimeGenerated, device\n    | summarize p95QLen = max(sum_qlen) by device;\nlet lastUpdateTimeByDevice = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where TimeGenerated < endTime\n    | where Name == \"edgehub_gettwin_total\" or Name == \"edgeAgent_total_time_running_correctly_seconds\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | project TimeGenerated, device\n    | summarize lastUpdateTime=max(TimeGenerated) by device;\nlet p95QlenByDeviceAndLastUpdate = p95QlenByDevice \n    | join kind=rightouter lastUpdateTimeByDevice on device\n    | extend device=device1\n    | project-away device1\n    | extend lastUpdatedSeconds = tolong(datetime_diff('second', now(), lastUpdateTime))\n    | extend lastUpdatedMins = tolong(datetime_diff('minute', now(), lastUpdateTime))\n    | extend lastUpdatedHours = tolong(datetime_diff('hour', now(), lastUpdateTime))\n    | extend lastUpdatedDays = tolong(datetime_diff('day', now(), lastUpdateTime))\n    | extend agoText = case(lastUpdatedSeconds <= 60, strcat(\"seen \", lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n        lastUpdatedSeconds <= 3600, strcat(\"seen \", lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n        lastUpdatedSeconds <= 86400, strcat(\"seen \", lastUpdatedHours, iff(lastUpdatedHours == 1, \" hr ago\", \" hrs ago\")),\n        strcat(\"ðŸ‘€ \", lastUpdatedDays, iff(lastUpdatedDays > 1, \" days ago\", \" day ago\")))\n    | project agoText, device, p95QLen, lastUpdatedMins;\nlet qlenAndLastUpdate = p95QlenByDeviceAndLastUpdate\n    | join kind=leftouter\n        cpu_mem_disk\n        on $left.device == $right.device\n    | project-away device1;\n// Local and upstream messages\nlet recentUpstreamMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of messages by Ignore2=max(1),\n    top-nested of source by Ignore3=max(1),\n    top-nested of sourceTarget by Ignore4=max(1)\n    | project-away Ignore*\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize maxSourceTargetCount=max(diff) by sourceTarget, device\n    | summarize recentUpstreamMessages=sum(maxSourceTargetCount) by device;\nlet recentLocalMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target !contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of messages by Ignore2=max(1),\n    top-nested of source by Ignore3=max(1),\n    top-nested of sourceTarget by Ignore4=max(1)\n    | project-away Ignore*\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize maxSourceTargetCount=max(diff) by sourceTarget, device\n    | summarize recentLocalMessages=sum(maxSourceTargetCount) by device;\nlet recentMessageCount = recentLocalMessageCount\n    | join kind=fullouter recentUpstreamMessageCount on device\n    | extend device=device1\n    | project-away device1;\n// Final join\nqlenAndLastUpdate\n| join kind=leftouter recentMessageCount on device\n| project-away device1\n| extend hostMemPercentThreshold = hostMemPercentThreshold\n| extend hostCpuPercentThreshold = hostCpuPercentThreshold\n| extend hostDiskPercentThreshold = hostDiskPercentThreshold\n| extend localMessagesSentThreshold = localMessagesSentThreshold\n| extend upstreamMessagesSentThreshold = upstreamMessagesSentThreshold\n| extend qlenThreshold = qlenThreshold\n| extend noDataPanicThreshold1Minutes = noDataPanicThreshold1Minutes\n| extend noDataPanicThreshold2Minutes = noDataPanicThreshold2Minutes\n| extend healthIndicator = iff((p95HostMem < hostMemPercentThreshold and \n    p95HostCpu < hostCpuPercentThreshold and\n    p95Disk < hostDiskPercentThreshold and\n    p95QLen < qlenThreshold), \n    iff(lastUpdatedMins < noDataPanicThreshold1Minutes,\n    0,\n    1),\n    2)\n| extend healthIndicator = iff(lastUpdatedMins > noDataPanicThreshold1Minutes,\n    1,\n    iff((isnull(p95HostMem) or p95HostMem < hostMemPercentThreshold) and \n    (isnull(p95HostCpu) or p95HostCpu < hostCpuPercentThreshold) and\n    (isnull(p95Disk) or p95Disk < hostDiskPercentThreshold) and\n    (isnull(p95QLen) or p95QLen < qlenThreshold) and\n    (recentLocalMessages >= localMessagesSentThreshold or \n    localMessagesSentThreshold == 0 \n    ) and\n    (recentUpstreamMessages >= upstreamMessagesSentThreshold or \n    upstreamMessagesSentThreshold == 0 \n    ),\n    0,\n    2)) \n| extend healthText = case(healthIndicator == 0, \"Healthy\",\n    healthIndicator == 1, \"Unhealthy\",\n    healthIndicator == 2, \"Unhealthy\",\n    \"Unknown\")\n| extend colorHelper = case(lastUpdatedMins > noDataPanicThreshold2Minutes, -2,\n    lastUpdatedMins > noDataPanicThreshold1Minutes, -1,\n    healthIndicator)",
                    "size": 0,
                    "title": "Device health",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportFieldName": "device",
                    "exportParameterName": "SelectedDeviceDetails",
                    "exportDefaultValue": "default",
                    "queryType": 0,
                    "resourceType": "{resource}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "visualization": "graph",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "device",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "default",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                              "typeSource": "default",
                              "gallerySource": "default",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SelectedDevice",
                                  "source": "cell",
                                  "value": ""
                                },
                                {
                                  "name": "timeRange",
                                  "source": "parameter",
                                  "value": "timeRange"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "device_messages_total",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "11.4286ch"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 1
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Number of messages received by edge hub"
                          }
                        },
                        {
                          "columnMatch": "device_messages_trend",
                          "formatter": 10,
                          "formatOptions": {
                            "min": 0,
                            "palette": "turquoise"
                          }
                        },
                        {
                          "columnMatch": "qlenTrend",
                          "formatter": 10,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed",
                            "compositeBarSettings": {
                              "labelText": "",
                              "columnSettings": []
                            }
                          }
                        },
                        {
                          "columnMatch": "agoText",
                          "formatter": 2,
                          "formatOptions": {
                            "customColumnWidthSetting": "13.1429ch"
                          }
                        },
                        {
                          "columnMatch": "cpu_used_percent",
                          "formatter": 10,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed",
                            "compositeBarSettings": {
                              "labelText": "",
                              "columnSettings": [
                                {
                                  "columnName": "cpu_used_percent",
                                  "color": "blue"
                                }
                              ]
                            }
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "mem_used_percent",
                          "formatter": 10,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "disk_used_trend",
                          "formatter": 10,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          }
                        },
                        {
                          "columnMatch": "lastUpdatedSeconds",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "agoText",
                          "label": "Last seen"
                        },
                        {
                          "columnId": "device",
                          "label": "Device name"
                        }
                      ]
                    },
                    "sortBy": [],
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "healthIndicator",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "0",
                              "representation": "success",
                              "text": ""
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "1",
                              "representation": "unknown",
                              "text": ""
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "2",
                              "representation": "2",
                              "text": ""
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ],
                          "compositeBarSettings": {
                            "labelText": "[\"device\"]",
                            "columnSettings": []
                          }
                        }
                      },
                      "centerContent": {
                        "columnMatch": "device",
                        "formatter": 7,
                        "formatOptions": {
                          "linkTarget": "WorkbookTemplate",
                          "linkIsContextBlade": true,
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "workbook",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/IoT Central/IoT Edge health snapshot",
                            "typeSource": "default",
                            "gallerySource": "default",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "SelectedDevice",
                                "source": "column",
                                "value": "device"
                              },
                              {
                                "name": "timeRange",
                                "source": "parameter",
                                "value": "timeRange"
                              },
                              {
                                "name": "SnapshotSelect",
                                "source": "static",
                                "value": "'CPU'"
                              },
                              {
                                "name": "hostMemPercentThreshold",
                                "source": "column",
                                "value": "hostMemPercentThreshold"
                              },
                              {
                                "name": "hostCpuPercentThreshold",
                                "source": "column",
                                "value": "hostCpuPercentThreshold"
                              },
                              {
                                "name": "hostDiskPercentThreshold",
                                "source": "column",
                                "value": "hostDiskPercentThreshold"
                              },
                              {
                                "name": "localMessagesSentThreshold",
                                "source": "column",
                                "value": "localMessagesSentThreshold"
                              },
                              {
                                "name": "upstreamMessagesSentThreshold",
                                "source": "column",
                                "value": "upstreamMessagesSentThreshold"
                              },
                              {
                                "name": "qlenThreshold",
                                "source": "column",
                                "value": "qlenThreshold"
                              },
                              {
                                "name": "invokedFromFleetViewWorkbook",
                                "source": "static",
                                "value": "yes"
                              }
                            ]
                          },
                          "compositeBarSettings": {
                            "labelText": "[\"device\"]",
                            "columnSettings": [
                              {
                                "columnName": "p95HostCpu",
                                "color": "blueDark"
                              }
                            ]
                          }
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false
                          }
                        }
                      },
                      "bottomContent": {
                        "columnMatch": "agoText",
                        "formatter": 1
                      },
                      "hivesContent": {
                        "columnMatch": "healthText",
                        "formatter": 1
                      },
                      "nodeIdField": "device",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "colorHelper",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "-2",
                            "representation": "blueDark"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "-1",
                            "representation": "blue"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "0",
                            "representation": "green"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "2",
                            "representation": "orange"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "gray"
                          }
                        ]
                      },
                      "groupByField": "healthText",
                      "hivesMargin": 1
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "mainAction",
                    "comparison": "isEqualTo",
                    "value": "devicelist"
                  },
                  "showPin": true,
                  "name": "device-health-graph"
                }
              ]
            },
            "customWidth": "75",
            "name": "device-health-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "Click **Name** link below for detailed metrics.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "ShowTips",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "device-list-tip",
                  "styleSettings": {
                    "padding": "12px 0px 0px 0px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let timeBin = 5m; // set to how often the devices send data\nlet startTime = {timeRange:start};\nlet endTime =  {timeRange:end};\nlet lastUpdateTimeByDevice = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where TimeGenerated < endTime\n    | where Name == \"edgehub_gettwin_total\" or Name == \"edgeAgent_total_time_running_correctly_seconds\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | project TimeGenerated, device\n    | summarize lastUpdateTime=max(TimeGenerated) by device\n    | order by lastUpdateTime;\nlet totalUpstreamMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize sumSourceTargetCount=sum(diff) by sourceTarget, device\n    | summarize UpstreamMessages=sum(sumSourceTargetCount) by device;\nlet totalLocalMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target !contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize sumSourceTargetCount=sum(diff) by sourceTarget, device\n    | summarize LocalMessages=sum(sumSourceTargetCount) by device;\nlet totalMessageCount = totalLocalMessageCount\n    | join kind=fullouter totalUpstreamMessageCount on device\n    | extend device=device1\n    | project-away device1;\n// Final query\nlastUpdateTimeByDevice\n| join kind=fullouter totalMessageCount on device\n| project-away device1\n| order by lastUpdateTime\n\n\n\n\n",
                    "size": 0,
                    "title": "Active devices ({$rowCount})",
                    "noDataMessage": "No active devices ",
                    "queryType": 0,
                    "resourceType": "{resource}",
                    "crossComponentResources": [
                      "{resource}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "device",
                          "formatter": 5,
                          "formatOptions": {
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                              "typeSource": "default",
                              "gallerySource": "default",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SelectedDevice",
                                  "source": "column",
                                  "value": "device"
                                },
                                {
                                  "name": "timeRange",
                                  "source": "parameter",
                                  "value": "timeRange"
                                }
                              ]
                            },
                            "compositeBarSettings": {
                              "labelText": "[\"device\"]",
                              "columnSettings": [
                                {
                                  "columnName": "totalUpstreamMessages",
                                  "color": "grayBlue"
                                },
                                {
                                  "columnName": "totalLocalMessages",
                                  "color": "brown"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "lastUpdateTime",
                          "formatter": 22,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "workbookContext": {
                              "componentIdSource": "workbook",
                              "resourceIdsSource": "workbook",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/IoT Central/IoT Edge device details",
                              "typeSource": "default",
                              "gallerySource": "default",
                              "locationSource": "default",
                              "passSpecificParams": true,
                              "templateParameters": [
                                {
                                  "name": "SelectedDevice",
                                  "source": "column",
                                  "value": "device"
                                },
                                {
                                  "name": "timeRange",
                                  "source": "parameter",
                                  "value": "timeRange"
                                }
                              ]
                            },
                            "compositeBarSettings": {
                              "labelText": "[\"device\"]",
                              "columnSettings": [
                                {
                                  "columnName": "UpstreamMessages",
                                  "color": "brown"
                                },
                                {
                                  "columnName": "LocalMessages",
                                  "color": "turquoise"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "LocalMessages",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "UpstreamMessages",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "$gen_compositeBar_lastUpdateTime_1",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "device",
                          "label": ""
                        },
                        {
                          "columnId": "lastUpdateTime",
                          "label": "Name"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_compositeBar_lastUpdateTime_1",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "showPin": true,
                  "name": "query - 2"
                }
              ]
            },
            "customWidth": "25",
            "name": "device-list-goup"
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "InsightsMetricsExists",
          "comparison": "isEqualTo",
          "value": "yes"
        },
        {
          "parameterName": "mainAction",
          "comparison": "isEqualTo",
          "value": "devicelist"
        }
      ],
      "name": "device-group",
      "styleSettings": {
        "showBorder": true
      }
    }
  ],
  "fallbackResourceIds": [
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}