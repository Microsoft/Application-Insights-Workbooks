{
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json",
  "version": "Notebook/1.0",
  "isLocked": true,
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# App Failures\n\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "6ab5c1cb-bad0-4d96-8e63-d439d0681c6e",
            "version": "KqlParameterItem/1.0",
            "name": "Operations",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "requests\n| where timestamp >= ago(1d)\n| summarize Count = count() by operation_Name\n| order by Count desc\n| project v = operation_Name, t = operation_Name, s = false\n| union (datatable(v:string, t:string, s:boolean)[\n'*', 'All Operations', true\n])",
            "value": [
              "*"
            ]
          },
          {
            "id": "aa11a70e-7149-4e26-aa14-88c94f1e11ce",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(key:string, display:string) \n[ \n\"1h\", \"Last Hour\", \n\"1d\", \"Last 24 hours\", \n\"2d\", \"Last 48 hours\", \n\"3d\", \"Last 3 days\", \n\"7d\", \"Last 7 days\", \n\"14d\", \"Last 14 days\", \n\"30d\", \"Last 30 days\", \n\"60d\", \"Last 60 days\", \n\"90d\", \"Last 90 days\"\n] ",
            "value": "1d"
          },
          {
            "id": "9d872277-b8d6-428f-963e-e7435777f4b2",
            "version": "KqlParameterItem/1.0",
            "name": "ComparisonTimeRange",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(key:string, display:string) \r\n[ \r\n\"1h\", \"Last Hour\", \r\n\"1d\", \"Last 24 hours\", \r\n\"2d\", \"Last 48 hours\", \r\n\"3d\", \"Last 3 days\", \r\n\"7d\", \"Last 7 days\", \r\n\"14d\", \"Last 14 days\", \r\n\"30d\", \"Last 30 days\", \r\n\"60d\", \"Last 60 days\", \r\n\"90d\", \"Last 90 days\"\r\n] ",
            "value": "7d"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "---\n## Request Failures Analysis\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "7a6716e6-3b5d-426b-a091-76e25325563a",
            "version": "KqlParameterItem/1.0",
            "name": "RequestFilters",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let timeRange = {TimeRange};\r\nrequests\r\n| where timestamp >= ago(timeRange)\r\n| where operation_Name in ({Operations}) or '*' in ({Operations})\r\n| summarize Count = count(), Users = dcount(user_Id) by name\r\n| project v = name, t = name, s=false\r\n| union (datatable(v:string, t:string, s:boolean)[\r\n'*', 'All Requests', true\r\n])"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Failures Rates"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "requests\n| where timestamp >= ago(1d)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| summarize Failures = countif(success == false), Total = count() by bin(timestamp, 30m)\n| project timestamp, FailureRate = 100.0 * Failures / Total",
        "showQuery": false,
        "size": 0,
        "aggregation": 2,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Requests Volume"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "58c30824-9f0e-4b28-8b2d-b39089465452",
            "version": "KqlParameterItem/1.0",
            "name": "Show",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x:string, y:string)[\r\n'[\"Failing Requests\"], [\"Passing Requests\"]', 'All Requests',\r\n'[\"Failing Requests\"]', 'Failing Requests',\r\n'[\"Passing Requests\"]', 'Passing Requests'\r\n]",
            "value": "[\"Failing Requests\"], [\"Passing Requests\"]"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "requests\n| where timestamp >= bin(ago(1d), 30m)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| summarize ['Failing Requests'] = countif(success == false), All = count() by bin(timestamp, 30m)\n| extend ['Passing Requests'] = All - ['Failing Requests']\n| project timestamp, {Show}\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 2,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "## Request Details"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "74a8079e-4da5-41e0-998b-ff8d300c3e5a",
            "version": "KqlParameterItem/1.0",
            "name": "Show",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x:string, y:string)[\r\n'new', 'Only New Failures',\r\n'all', 'All Failures'\r\n]",
            "value": "all"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "\nðŸ”¸ New Failure ðŸ”¹ Existing Failure"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let timeRange = {TimeRange};\nlet bigWindowTimeRange = {ComparisonTimeRange};\nlet bigWindow = requests\n| where timestamp >= ago(bigWindowTimeRange)\n| where success == false\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| summarize by name, resultCode\n| summarize makelist(strcat(name, '-', resultCode));\nrequests\n| where timestamp >= ago(timeRange)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| where name in ({RequestFilters}) or '*' in ({RequestFilters})\n| where success == false\n| summarize Count = count(), Users = dcount(user_Id) by name, resultCode\n| extend IsNew = iff(strcat(name, '-', resultCode) !in (bigWindow), true, false)\n| where '{Show}' == 'all' or IsNew == true\n| order by Users desc, Count desc, name asc\n| project ['Request Name'] = iff(IsNew == true, strcat('ðŸ”¸ ', name), strcat('ðŸ”¹ ', name)), ['Failed with Result Code'] = resultCode, ['Request Failures'] = Count, ['Users Affected'] = Users",
        "showQuery": false,
        "size": 1,
        "aggregation": 2,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "table"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "---\n## Exceptions Analysis\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "481f99f9-eec9-453b-a342-064a91cc4ed6",
            "version": "KqlParameterItem/1.0",
            "name": "ProblemFilter",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let timeRange = {TimeRange};\r\nexceptions\r\n| where timestamp >= ago(timeRange)\r\n| where operation_Name in ({Operations}) or '*' in ({Operations})\r\n| summarize Count = count() by problemId\r\n| order by Count desc\r\n| project v = problemId, t = problemId, s=false\r\n| union (datatable(v:string, t:string, s:boolean)[\r\n'*', 'All Exceptions', true\r\n])"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Exception Trends"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "74a8079e-4da5-41e0-998b-ff8d300c3e5a",
            "version": "KqlParameterItem/1.0",
            "name": "Show",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x:string, y:string)[\r\n'new', 'Only New Exceptions',\r\n'all', 'All Exceptions'\r\n]",
            "value": "all"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let timeRange = {TimeRange};\nlet bigWindowTimeRange = {ComparisonTimeRange};\nlet bigWindow = exceptions\n| where timestamp >= ago(bigWindowTimeRange)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| summarize by problemId\n| summarize makelist(problemId);\nexceptions\n| where timestamp >= ago(timeRange)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| summarize Count = count() by bin(timestamp, 30m), problemId\n| where problemId in ({ProblemFilter}) or '*' in ({ProblemFilter})\n| extend IsNew = iff(problemId !in (bigWindow), true, false)\n| where '{Show}' == 'all' or IsNew == true\n| project timestamp, problemId, Count\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 2,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Exception Details\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "\nðŸ”¸ New Exception ðŸ”¹ Existing Exception"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let timeRange = {TimeRange};\nlet bigWindowTimeRange = {ComparisonTimeRange};\nlet bigWindow = exceptions\n| where timestamp >= ago(bigWindowTimeRange)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| summarize by problemId\n| where problemId in ({ProblemFilter}) or '*' in ({ProblemFilter})\n| summarize makelist(problemId);\nexceptions\n| where timestamp >= ago(timeRange)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| summarize Count = count(), Users = dcount(user_Id) by problemId, operation_Name\n| where problemId in ({ProblemFilter}) or '*' in ({ProblemFilter})\n| extend IsNew = iff(problemId !in (bigWindow), true, false)\n| where '{Show}' == 'all' or IsNew == true\n| order by Users desc, Count desc, problemId asc\n| project Problem = iff(IsNew == true, strcat('ðŸ”¸ ', problemId), strcat('ðŸ”¹ ', problemId)), Operation = operation_Name, ['Problem Count'] = Count, ['Users Affected'] = Users",
        "showQuery": false,
        "size": 1,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "---\n## Dependency Failure Analysis\n"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "42490f33-2004-4535-8e9f-69ede57f2542",
            "version": "KqlParameterItem/1.0",
            "name": "DependencyFilters",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let timeRange = {TimeRange};\r\ndependencies\r\n| where timestamp >= ago(timeRange)\r\n| where operation_Name in ({Operations}) or '*' in ({Operations})\r\n| summarize Count = count() by name\r\n| order by Count desc\r\n| project v = name, t = name, s=false\r\n| union (datatable(v:string, t:string, s:boolean)[\r\n'*', 'All Exceptions', true\r\n])"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Failure Rates"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "dependencies\n| where timestamp >= ago(1d)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| where name in ({DependencyFilters}) or '*' in ({DependencyFilters})\n| summarize Failures = countif(success == false), Total = count() by bin(timestamp, 30m)\n| project timestamp, ['Dependency Failure Rate'] = 100.0 * Failures / Total",
        "showQuery": false,
        "size": 0,
        "aggregation": 2,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Dependency Trends"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "58c30824-9f0e-4b28-8b2d-b39089465452",
            "version": "KqlParameterItem/1.0",
            "name": "Show",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x:string, y:string)[\r\n'[\"Failing Dependencies\"], [\"Passing Dependencies\"]', 'All Dependencies',\r\n'[\"Failing Dependencies\"]', 'Failing Dependencies',\r\n'[\"Passing Dependencies\"]', 'Passing Dependencies'\r\n]",
            "value": "[\"Failing Dependencies\"], [\"Passing Dependencies\"]"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "dependencies\n| where timestamp >= bin(ago(1d), 30m)\n| where operation_Name in ({Operations}) or '*' in ({Operations})\n| where name in ({DependencyFilters}) or '*' in ({DependencyFilters})\n| summarize ['Failing Dependencies'] = countif(success == false), All = count() by bin(timestamp, 30m)\n| extend ['Passing Dependencies'] = All - ['Failing Dependencies']\n| project timestamp, {Show}\n",
        "showQuery": false,
        "size": 0,
        "aggregation": 2,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 1,
      "content": {
        "json": "### Dependency Details"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "query": "",
        "crossComponentResources": [],
        "parameters": [
          {
            "id": "74a8079e-4da5-41e0-998b-ff8d300c3e5a",
            "version": "KqlParameterItem/1.0",
            "name": "Show",
            "type": 2,
            "description": null,
            "isRequired": true,
            "multiSelect": null,
            "query": "datatable(x:string, y:string)[\r\n'new', 'Only New Dependency Failures',\r\n'all', 'All Dependency Failures'\r\n]",
            "value": "all"
          }
        ],
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let timeRange = {TimeRange};\r\nlet bigWindowTimeRange = {ComparisonTimeRange};\r\nlet bigWindow = dependencies\r\n| where timestamp >= ago(bigWindowTimeRange)\r\n| where operation_Name in ({Operations}) or '*' in ({Operations})\r\n| where name in ({DependencyFilters}) or '*' in ({DependencyFilters})\r\n| where success == false\r\n| summarize by name, resultCode\r\n| summarize makelist(strcat(name, '-', resultCode));\r\ndependencies\r\n| where timestamp >= ago(timeRange)\r\n| where operation_Name in ({Operations}) or '*' in ({Operations})\r\n| where name in ({DependencyFilters}) or '*' in ({DependencyFilters})\r\n| where success == false\r\n| summarize Count = count(), Users = dcount(user_Id) by name, resultCode\r\n| extend IsNew = iff(strcat(name, '-', resultCode) !in (bigWindow), true, false)\r\n| where '{Show}' == 'all' or IsNew == true\r\n| order by Users desc, Count desc, name asc\r\n| project ['Dependency Name'] = iff(IsNew == true, strcat('ðŸ”¸ ', name), strcat('ðŸ”¹ ', name)), ['Failed with Result Code'] = resultCode, ['Dependency Failures'] = Count, ['Users Affected'] = Users",
        "showQuery": false,
        "size": 1,
        "aggregation": 0,
        "showAnnotations": false,
        "showAnalytics": false,
        "resourceType": "microsoft.insights/components"
      },
      "conditionalVisibility": null,
      "halfWidth": false
    }
  ]
}