{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "d062cb40-2eed-4917-ab42-8f271db98312",
            "version": "KqlParameterItem/1.0",
            "name": "InsightsMetricsExists",
            "type": 1,
            "query": "let hasNonEmptyTable = (T:string) \n{ \n   toscalar( union isfuzzy=true ( table(T) | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\n};\nlet TableName = 'InsightsMetrics';\nprint IsPresent=iif(hasNonEmptyTable(TableName), \"yes\", \"no\")",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.devices/iothubs"
          },
          {
            "id": "36a641eb-587a-40c0-b491-b7b2f85eb0c0",
            "version": "KqlParameterItem/1.0",
            "name": "mainAction",
            "type": 1,
            "isGlobal": true,
            "value": "devicelist",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.devices/iothubs"
      },
      "name": "parameters - 5"
    },
    {
      "type": 1,
      "content": {
        "json": "## Please on-board with instructions at [aka.ms/edgemon-preview](https://aka.ms/edgemon-preview). <br>\n*Ensure the guidance in Step 3 (Setup Azure Monitor Workspace) is followed.*"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "no"
      },
      "name": "text - 6"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1b4b2d2e-4f2e-4881-903d-f307d6958a1c",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.devices/iothubs"
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "25",
      "name": "parameters - 1 - Copy",
      "styleSettings": {
        "margin": "-15px 0px 0px"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "9ba0a0e8-584b-421a-85e6-96c89eda5a17",
            "cellValue": "mainAction",
            "linkTarget": "parameter",
            "linkLabel": "Device list",
            "subTarget": "devicelist",
            "style": "link"
          },
          {
            "id": "59f6773e-da9a-4780-a68f-37f4a7577249",
            "cellValue": "mainAction",
            "linkTarget": "parameter",
            "linkLabel": "Bird's eye view",
            "subTarget": "birdseye",
            "style": "link"
          },
          {
            "id": "3b8d77da-20d0-499a-b62d-25f5c6a88a55",
            "cellValue": "mainAction",
            "linkTarget": "parameter",
            "linkLabel": "Alerts",
            "subTarget": "alerts",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "customWidth": "50",
      "name": "links - 8 - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "ðŸ’¡ *Click **Device name** link to see details*"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "InsightsMetricsExists",
          "comparison": "isEqualTo",
          "value": "yes"
        },
        {
          "parameterName": "mainAction",
          "comparison": "isEqualTo",
          "value": "devicelist"
        }
      ],
      "customWidth": "25",
      "name": "device-list-main-tip",
      "styleSettings": {
        "padding": "12px 0px 0px 0px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "ðŸ’¡ *Click **Device name** in tile to see details*"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "InsightsMetricsExists",
          "comparison": "isEqualTo",
          "value": "yes"
        },
        {
          "parameterName": "mainAction",
          "comparison": "isEqualTo",
          "value": "birdseye"
        }
      ],
      "customWidth": "25",
      "name": "birdseye-main-tip",
      "styleSettings": {
        "padding": "12px 0px 0px 0px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "ðŸ’¡ * Learn how to **[create alerts](https://aka.ms/edgemon-create-alerts)***"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "InsightsMetricsExists",
          "comparison": "isEqualTo",
          "value": "yes"
        },
        {
          "parameterName": "mainAction",
          "comparison": "isEqualTo",
          "value": "alerts"
        }
      ],
      "customWidth": "25",
      "name": "alerts-main-tip",
      "styleSettings": {
        "padding": "12px 0px 0px 0px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let minPeriod = 5m;\nlet numPeriods = 24;\nlet startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nlet timeBin_ = (endTime - startTime) / numPeriods;\nlet timeBin = iff(timeBin_ < minPeriod, minPeriod, timeBin_);\nlet cpu_percent = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"host\" and Tags contains \"0.9\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = toint(Val)\n| project device, value, TimeGenerated\n| order by device, TimeGenerated\n| serialize\n| make-series cpu_used_percent = max(value) on TimeGenerated from (startTime - 5m) to endTime step timeBin by  device\n| project-away TimeGenerated;\nlet totalMemByDevice = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_total_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| project device, value, TimeGenerated\n| summarize total_bytes=max(value) by device;\nlet memUsedPercent = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend used_bytes = tolong(Val)\n| project device, used_bytes, TimeGenerated\n| join kind=leftouter totalMemByDevice on $left.device == $right.device\n| extend mem_used_percent = (todouble(used_bytes)/todouble(total_bytes))*100\n| extend mem_used_percent = round(mem_used_percent, 0)\n| order by device, TimeGenerated\n| serialize\n| make-series mem_used_percent = max(mem_used_percent) on TimeGenerated from startTime to endTime step timeBin by device\n| project-away TimeGenerated;\nlet cpu_and_mem = memUsedPercent\n| join cpu_percent on $left.device == $right.device\n| project-away device1;\nlet totalBytesByDevice = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_total_disk_space_bytes\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| extend diskname = tostring(dimensions.disk_name)\n| project device, diskname, value, TimeGenerated\n| summarize Bytes=max(value) by device, diskname\n| summarize totalBytes=sum(Bytes) by device;\nlet used_disk_trend = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_available_disk_space_bytes\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| extend diskname = tostring(dimensions.disk_name)\n| project device, diskname, value, TimeGenerated\n| summarize Bytes=max(value) by device, diskname, TimeGenerated\n| summarize availBytes=sum(Bytes) by device, TimeGenerated\n| join kind=leftouter\n    totalBytesByDevice\non $left.device == $right.device\n| extend percentUsed = round((todouble(totalBytes) - todouble(availBytes))/todouble(totalBytes) * 100, 0)\n| project TimeGenerated, device, percentUsed\n| order by device, TimeGenerated\n| make-series disk_used_trend = max(percentUsed) on TimeGenerated from (startTime - 5m) to endTime step timeBin by  device\n| project-away TimeGenerated;\nlet cpu_mem_disk = cpu_and_mem\n| join\n    used_disk_trend\non $left.device == $right.device;\nlet messages_trend = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgehub_messages_received_total\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend id = tostring(dimensions.id)\n| extend value = toint(Val)\n| extend id_device = strcat(id,\"+\",device)\n| project id, device, id_device, value, TimeGenerated\n| order by id_device, TimeGenerated\n| serialize\n| extend nextValue = next(value, 1)\n| extend nextId = next(id_device, 1)\n| extend diff = iff((value - nextValue) >= 0, value - nextValue, value)\n| where id_device == nextId and diff >= 0\n| make-series device_messages_trend = sum(diff) on TimeGenerated from startTime to endTime step timeBin by device;\nlet messages_total = messages_trend\n| mv-expand with_itemindex=x device_messages_trend to typeof(long)\n| summarize device_messages_total=sum(device_messages_trend) by device\n| join\n    messages_trend\non $left.device == $right.device;\nlet allDevices = InsightsMetrics\n| where TimeGenerated > startTime\n| where TimeGenerated < endTime\n| where Name == \"edgehub_gettwin_total\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| project TimeGenerated, device, qlen=0\n| summarize sum_qlen=max(qlen) by TimeGenerated, device;\nlet totalQlenByDevice_1 = InsightsMetrics\n| where TimeGenerated > startTime\n| where TimeGenerated < endTime\n| where Name == \"edgehub_queue_length\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend ep = tostring(dimensions.endpoint)\n| extend qlen = toint(Val)\n| project device, qlen, ep, TimeGenerated\n| summarize sum(qlen) by TimeGenerated, device;\nlet totalQlenByDevice_2 = totalQlenByDevice_1\n| join kind=rightanti allDevices on $left.device == $right.device;\nlet totalQlenByDevice = union withsource=\"TempTableName\" totalQlenByDevice_1, totalQlenByDevice_2\n| project TimeGenerated, device, qlen=sum_qlen\n| summarize sum(qlen) by TimeGenerated, device;\nlet lastUpdateTimeByDevice = allDevices\n| summarize lastUpdateTime=max(TimeGenerated) by device;\nlet trendQLenAndLastUpdate = totalQlenByDevice \n| make-series qlenTrend = percentile(sum_qlen, 95) on TimeGenerated from startTime to endTime step timeBin by device\n| join kind=leftouter lastUpdateTimeByDevice on device\n| project-away device1\n| extend  lastUpdatedSeconds = tolong(datetime_diff('second', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedMins = tolong(datetime_diff('minute', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedHours = tolong(datetime_diff('hour', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedDays = tolong(datetime_diff('day', {timeRange:end}, lastUpdateTime))\n| extend agoText = case(lastUpdatedSeconds <= 60, strcat(lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n                        lastUpdatedSeconds <= 3600, strcat(lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n                        lastUpdatedSeconds <= 86400, strcat(lastUpdatedHours, iff(lastUpdatedHours == 1, \" hr ago\", \" hrs ago\")),\n                        strcat(lastUpdatedDays, iff(lastUpdatedHours == 1, \" day ago\", \" days ago\")))\n| join kind=leftouter messages_total on device\n| project device, device_messages_total, device_messages_trend, qlenTrend, agoText, lastUpdatedSeconds;                  \ntrendQLenAndLastUpdate\n| join kind=leftouter\n    cpu_mem_disk\non $left.device == $right.device\n| project device, device_messages_total, device_messages_trend, qlenTrend, agoText, cpu_used_percent, mem_used_percent, disk_used_trend, lastUpdatedSeconds; \n",
              "size": 3,
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "device",
              "exportParameterName": "SelectedDeviceDetails",
              "exportDefaultValue": "default",
              "queryType": 0,
              "resourceType": "microsoft.devices/iothubs",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "device",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "default",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                        "typeSource": "default",
                        "gallerySource": "default",
                        "locationSource": "default",
                        "passSpecificParams": true,
                        "templateParameters": [
                          {
                            "name": "SelectedDevice",
                            "source": "cell",
                            "value": ""
                          },
                          {
                            "name": "timeRange",
                            "source": "parameter",
                            "value": "timeRange"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "device_messages_total",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "11.4286ch"
                    },
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Number of messages received by edge hub"
                    }
                  },
                  {
                    "columnMatch": "device_messages_trend",
                    "formatter": 10,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    }
                  },
                  {
                    "columnMatch": "qlenTrend",
                    "formatter": 10,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed",
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  },
                  {
                    "columnMatch": "agoText",
                    "formatter": 2,
                    "formatOptions": {
                      "customColumnWidthSetting": "13.1429ch"
                    }
                  },
                  {
                    "columnMatch": "cpu_used_percent",
                    "formatter": 10,
                    "formatOptions": {
                      "palette": "greenRed",
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": [
                          {
                            "columnName": "cpu_used_percent",
                            "color": "blue"
                          }
                        ]
                      }
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "mem_used_percent",
                    "formatter": 10,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "disk_used_trend",
                    "formatter": 10,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed"
                    }
                  },
                  {
                    "columnMatch": "lastUpdatedSeconds",
                    "formatter": 5
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_number_device_messages_total_1",
                    "sortOrder": 1
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "device",
                    "label": "Device name"
                  },
                  {
                    "columnId": "device_messages_total",
                    "label": "# Msgs"
                  },
                  {
                    "columnId": "device_messages_trend",
                    "label": "Processed messages"
                  },
                  {
                    "columnId": "qlenTrend",
                    "label": "QLen"
                  },
                  {
                    "columnId": "agoText",
                    "label": "Last seen"
                  },
                  {
                    "columnId": "cpu_used_percent",
                    "label": "% CPU use"
                  },
                  {
                    "columnId": "mem_used_percent",
                    "label": "% Memory use"
                  },
                  {
                    "columnId": "disk_used_trend",
                    "label": "% Disk use"
                  },
                  {
                    "columnId": "lastUpdatedSeconds"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_number_device_messages_total_1",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isEqualTo",
              "value": "devicelist"
            },
            "name": "query - 4"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "c1fa00aa-4f70-43a5-9d0b-87c86fbf4658",
                  "cellValue": "birdseye-view",
                  "linkTarget": "parameter",
                  "linkLabel": "Queue length (p95)",
                  "subTarget": "qlen",
                  "style": "link"
                },
                {
                  "id": "64bc16b8-6144-4172-894f-b9f4d21b9522",
                  "cellValue": "birdseye-view",
                  "linkTarget": "parameter",
                  "linkLabel": "Memory (p95)",
                  "subTarget": "memory",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isEqualTo",
              "value": "birdseye"
            },
            "name": "links - 5",
            "styleSettings": {
              "margin": "12px 12px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let totalMemByDevice = InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_total_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| project device, value, TimeGenerated\n| summarize total_bytes=max(value) by device;\nlet memUsedPercent = InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend used_bytes = tolong(Val)\n| project device, used_bytes, TimeGenerated\n| join kind=leftouter totalMemByDevice on $left.device == $right.device\n| extend mem_used_percent = (todouble(used_bytes)/todouble(total_bytes))*100\n| extend mem_used_percent = round(mem_used_percent, 0)\n| summarize p95MemPercent = percentile(mem_used_percent, 95) by device;\nmemUsedPercent\n",
              "size": 0,
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "device",
              "exportParameterName": "SelectedDeviceDetails",
              "exportDefaultValue": "default",
              "queryType": 0,
              "resourceType": "microsoft.devices/iothubs",
              "visualization": "graph",
              "graphSettings": {
                "type": 2,
                "topContent": {
                  "columnMatch": "device",
                  "formatter": 1,
                  "formatOptions": {}
                },
                "centerContent": {
                  "columnMatch": "p95MemPercent",
                  "formatter": 1,
                  "formatOptions": {},
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "nodeIdField": "device",
                "nodeSize": null,
                "staticNodeSize": 100,
                "colorSettings": {
                  "nodeColorField": "p95MemPercent",
                  "type": 3,
                  "thresholdsGrid": [
                    {
                      "operator": "<=",
                      "thresholdValue": "60",
                      "representation": "green"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "80",
                      "representation": "yellow"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "90",
                      "representation": "orange"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "100",
                      "representation": "redBright"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "blue"
                    }
                  ]
                },
                "hivesMargin": 2
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "mainAction",
                "comparison": "isEqualTo",
                "value": "birdseye"
              },
              {
                "parameterName": "birdseye-view",
                "comparison": "isEqualTo",
                "value": "memory"
              }
            ],
            "name": "query - 4"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "\n\nlet minPeriod = 5m;\nlet numPeriods = 15;\nlet startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nlet timeBin_ = (endTime - startTime) / numPeriods;\nlet timeBin = iff(timeBin_ < minPeriod, minPeriod, timeBin_);\nlet totalQlenByDevice = InsightsMetrics\n| where TimeGenerated > startTime\n| where TimeGenerated < endTime\n| where Name == \"edgehub_queue_length\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend ep = tostring(dimensions.endpoint)\n| extend qlen = toint(Val)\n| project device, qlen, ep, TimeGenerated\n| summarize sum(qlen) by TimeGenerated, device;\nlet lastUpdateTimeByDevice = totalQlenByDevice\n| summarize lastUpdateTime=max(TimeGenerated) by device;\nlet qlenTrend = totalQlenByDevice\n| make-series qTrend = percentile(sum_qlen, 95) on TimeGenerated from startTime to endTime step timeBin by device;\nlet p95QLenAndLastUpdate = totalQlenByDevice\n| summarize p95Qlen=percentile(sum_qlen, 95) by device\n| join kind=leftouter qlenTrend on device\n| project-away device1\n| join kind=leftouter lastUpdateTimeByDevice on device\n| project-away device1\n| extend  lastUpdatedSeconds = tolong(datetime_diff('second', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedMins = tolong(datetime_diff('minute', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedHours = tolong(datetime_diff('hour', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedDays = tolong(datetime_diff('day', {timeRange:end}, lastUpdateTime))\n| extend agoText = case(lastUpdatedSeconds <= 60, strcat(\"seen \", lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n                        lastUpdatedSeconds <= 3600, strcat(\"seen \", lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n                        lastUpdatedSeconds <= 86400, strcat(\"seen \", lastUpdatedHours, iff(lastUpdatedHours == 1, \" hr ago\", \" hrs ago\")),\n                        strcat(\"Updated \", lastUpdatedDays, iff(lastUpdatedHours == 1, \" day ago\", \" days ago\")))\n| extend colorHelper = case(lastUpdatedSeconds > 86400, -2,\n                            lastUpdatedSeconds > 3600, -1,\n                            p95Qlen);                     \np95QLenAndLastUpdate",
                    "size": 0,
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportFieldName": "device",
                    "exportParameterName": "SelectedDeviceDetails",
                    "exportDefaultValue": "default",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "graph",
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "lastUpdatedHours",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "lastUpdatedHours",
                        "sortOrder": 2
                      }
                    ],
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "qTrend",
                        "formatter": 9,
                        "formatOptions": {
                          "min": 0,
                          "max": 75,
                          "palette": "blackWhite"
                        }
                      },
                      "leftContent": {
                        "columnMatch": "p95Qlen",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 1
                          }
                        }
                      },
                      "centerContent": {
                        "columnMatch": "device",
                        "formatter": 1,
                        "formatOptions": {
                          "linkTarget": "WorkbookTemplate",
                          "workbookContext": {
                            "componentIdSource": "workbook",
                            "resourceIdsSource": "default",
                            "templateIdSource": "static",
                            "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                            "typeSource": "default",
                            "gallerySource": "default",
                            "locationSource": "default",
                            "passSpecificParams": true,
                            "templateParameters": [
                              {
                                "name": "SelectedDevice",
                                "source": "cell",
                                "value": ""
                              },
                              {
                                "name": "timeRange",
                                "source": "parameter",
                                "value": ""
                              }
                            ]
                          }
                        }
                      },
                      "bottomContent": {
                        "columnMatch": "agoText",
                        "formatter": 1
                      },
                      "nodeIdField": "device",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 140,
                      "colorSettings": {
                        "nodeColorField": "colorHelper",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "-2",
                            "representation": "blueDark"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "-1",
                            "representation": "blue"
                          },
                          {
                            "operator": "<=",
                            "thresholdValue": "20",
                            "representation": "green"
                          },
                          {
                            "operator": "<=",
                            "thresholdValue": "100",
                            "representation": "orange"
                          },
                          {
                            "operator": ">",
                            "thresholdValue": "100",
                            "representation": "redBright"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blue"
                          }
                        ]
                      },
                      "hivesMargin": 2
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "mainAction",
                      "comparison": "isEqualTo",
                      "value": "birdseye"
                    },
                    {
                      "parameterName": "birdseye-view",
                      "comparison": "isEqualTo",
                      "value": "qlen"
                    }
                  ],
                  "name": "query - 4 - Copy"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "*Legend: Center - Device name, Left - P95 Qlen for selected timerange, Top - Qlen trend, Bottom - Time since last update.*"
                  },
                  "name": "text - 1"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibilities": [
              {
                "parameterName": "mainAction",
                "comparison": "isEqualTo",
                "value": "birdseye"
              },
              {
                "parameterName": "birdseye-view",
                "comparison": "isEqualTo",
                "value": "qlen"
              }
            ],
            "name": "qlenbev-group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscription",
                        "label": "Subscriptions",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": false,
                          "showDefault": false
                        },
                        "defaultValue": "value::all"
                      },
                      {
                        "id": "b616a3a3-4271-4208-b1a9-a92a78efed08",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceGroups",
                        "label": "Resource groups",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "Resources\r\n| summarize by resourceGroup\r\n| order by resourceGroup asc\r\n| project id=resourceGroup, resourceGroup",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "0e85e0e4-a7e8-4ea8-b291-e444c317843a",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceTypes",
                        "label": "Resource types",
                        "type": 7,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where \"*\" in ({ResourceGroups}) or resourceGroup in ({ResourceGroups})\r\n| summarize by type\r\n| where type == 'microsoft.devices/iothubs'\r\n| project type, label=type\r\n",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
                        "version": "KqlParameterItem/1.0",
                        "name": "IoTHub",
                        "label": "IoT Hub resources",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "Resources\r\n| where \"*\" in ({ResourceTypes}) or type in~({ResourceTypes})\r\n| where '*' in~({ResourceGroups}) or resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| extend Rank = row_number()\r\n| where type == 'microsoft.devices/iothubs'\r\n| project value = id, label = name, selected = Rank <= 10, group = resourceGroup",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "value": [
                          "value::all"
                        ]
                      },
                      {
                        "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                        "version": "KqlParameterItem/1.0",
                        "name": "State",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "queryType": 8
                      }
                    ],
                    "style": "above",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs"
                  },
                  "name": "parameters",
                  "styleSettings": {
                    "margin": "10px 0px 0px -10px"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({IoTHub}) or properties.essentials.targetResource in~ ({IoTHub})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc",
                                "size": 3,
                                "title": "Alert summary",
                                "noDataMessage": "No alerts found",
                                "noDataMessageStyle": 3,
                                "exportFieldName": "Severity",
                                "exportParameterName": "Severity",
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources",
                                "crossComponentResources": [
                                  "{Subscription}"
                                ],
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "Severity",
                                      "formatter": 11,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "16.5ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "Count",
                                      "formatter": 22,
                                      "formatOptions": {
                                        "aggregation": "Sum",
                                        "compositeBarSettings": {
                                          "labelText": "[\"New\"] New alerts",
                                          "columnSettings": [
                                            {
                                              "columnName": "New",
                                              "color": "blueDark"
                                            },
                                            {
                                              "columnName": "Acknowledged",
                                              "color": "lightBlue"
                                            },
                                            {
                                              "columnName": "Closed",
                                              "color": "gray"
                                            }
                                          ]
                                        }
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": false,
                                          "maximumFractionDigits": 2
                                        }
                                      }
                                    },
                                    {
                                      "columnMatch": "New",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Acknowledged",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Closed",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "State",
                                      "formatter": 5
                                    }
                                  ],
                                  "sortBy": [
                                    {
                                      "itemKey": "Severity",
                                      "sortOrder": 1
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "Severity",
                                    "sortOrder": 1
                                  }
                                ]
                              },
                              "showPin": true,
                              "name": "Alert Summary"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "ðŸ’¡ *Click Severity above for details*"
                              },
                              "conditionalVisibility": {
                                "parameterName": "Severity",
                                "comparison": "isEqualTo"
                              },
                              "name": "text - 3"
                            },
                            {
                              "type": 1,
                              "content": {
                                "json": "ðŸ’¡ * Click **Device** link to see details around the time of the alert*"
                              },
                              "conditionalVisibility": {
                                "parameterName": "Severity",
                                "comparison": "isNotEqualTo"
                              },
                              "name": "alert-details-tip",
                              "styleSettings": {
                                "margin": "0px 0px 0px -10px"
                              }
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "30",
                        "name": "alert-summary-group"
                      },
                      {
                        "type": 12,
                        "content": {
                          "version": "NotebookGroup/1.0",
                          "groupType": "editable",
                          "items": [
                            {
                              "type": 3,
                              "content": {
                                "version": "KqlItem/1.0",
                                "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity == '{Severity}'\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend alertTimeRange=pack(\"durationMs\", (todatetime(properties.essentials.startDateTime) - (todatetime(properties.essentials.startDateTime)-2h))/time(1ms), \"endTime\", todatetime(properties.essentials.startDateTime))\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({IoTHub}) or properties.essentials.targetResource in~ ({IoTHub})\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Device=tostring(properties.context.context.condition.allOf[0].dimensions[0].value), IoTHub = tostring(properties.essentials.targetResource), Name=name, Observed = tostring(properties.context.context.condition.allOf[0].metricValue), Threshold = tostring(properties.context.context.condition.allOf[0].threshold), State=tostring(properties.essentials.alertState), alertTimeRange\r\n| order by StartTime desc\r\n",
                                "size": 0,
                                "title": "{$rowCount} {Severity} Alerts",
                                "noDataMessage": "No alerts found",
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources",
                                "crossComponentResources": [
                                  "{Subscription}"
                                ],
                                "visualization": "table",
                                "gridSettings": {
                                  "formatters": [
                                    {
                                      "columnMatch": "AlertId",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "linkTarget": "Resource"
                                      }
                                    },
                                    {
                                      "columnMatch": "StartTime",
                                      "formatter": 6,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "22.4286ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "Device",
                                      "formatter": 7,
                                      "formatOptions": {
                                        "linkTarget": "WorkbookTemplate",
                                        "linkIsContextBlade": false,
                                        "workbookContext": {
                                          "componentIdSource": "column",
                                          "componentId": "IoTHub",
                                          "resourceIdsSource": "default",
                                          "templateIdSource": "static",
                                          "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                                          "typeSource": "default",
                                          "gallerySource": "default",
                                          "locationSource": "default",
                                          "passSpecificParams": true,
                                          "templateParameters": [
                                            {
                                              "name": "SelectedDevice",
                                              "source": "cell",
                                              "value": ""
                                            },
                                            {
                                              "name": "timeRange",
                                              "source": "column",
                                              "value": "alertTimeRange"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "22.5714ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "IoTHub",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "14.8571ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "Name",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkTarget": "OpenBlade",
                                        "linkIsContextBlade": true,
                                        "bladeOpenContext": {
                                          "bladeName": "AlertDetailsTemplateBlade",
                                          "extensionName": "Microsoft_Azure_Monitoring",
                                          "bladeParameters": [
                                            {
                                              "name": "alertId",
                                              "source": "column",
                                              "value": "AlertId"
                                            },
                                            {
                                              "name": "alertName",
                                              "source": "column",
                                              "value": "Name"
                                            },
                                            {
                                              "name": "invokedFrom",
                                              "source": "static",
                                              "value": "Workbooks"
                                            }
                                          ]
                                        },
                                        "customColumnWidthSetting": "31.5714ch"
                                      },
                                      "tooltipFormat": {
                                        "tooltip": "View alert details"
                                      }
                                    },
                                    {
                                      "columnMatch": "Observed",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "14ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "Threshold",
                                      "formatter": 0,
                                      "formatOptions": {
                                        "customColumnWidthSetting": "14.2857ch"
                                      }
                                    },
                                    {
                                      "columnMatch": "State",
                                      "formatter": 1
                                    },
                                    {
                                      "columnMatch": "alertTimeRange",
                                      "formatter": 5
                                    },
                                    {
                                      "columnMatch": "Level",
                                      "formatter": 11
                                    },
                                    {
                                      "columnMatch": "TargetResource",
                                      "formatter": 13,
                                      "formatOptions": {
                                        "linkTarget": "Resource",
                                        "subTarget": "alerts",
                                        "showIcon": true
                                      }
                                    },
                                    {
                                      "columnMatch": "Severity",
                                      "formatter": 11
                                    },
                                    {
                                      "columnMatch": "essentials",
                                      "formatter": 5,
                                      "formatOptions": {
                                        "linkTarget": "CellDetails",
                                        "linkIsContextBlade": true
                                      }
                                    }
                                  ],
                                  "rowLimit": 1000,
                                  "filter": true,
                                  "sortBy": [
                                    {
                                      "itemKey": "StartTime",
                                      "sortOrder": 2
                                    }
                                  ],
                                  "labelSettings": [
                                    {
                                      "columnId": "AlertId"
                                    },
                                    {
                                      "columnId": "StartTime"
                                    },
                                    {
                                      "columnId": "Device"
                                    },
                                    {
                                      "columnId": "IoTHub",
                                      "label": "IoT Hub"
                                    },
                                    {
                                      "columnId": "Name",
                                      "label": "Alert name"
                                    },
                                    {
                                      "columnId": "Observed"
                                    },
                                    {
                                      "columnId": "Threshold"
                                    },
                                    {
                                      "columnId": "State"
                                    },
                                    {
                                      "columnId": "alertTimeRange"
                                    }
                                  ]
                                },
                                "sortBy": [
                                  {
                                    "itemKey": "StartTime",
                                    "sortOrder": 2
                                  }
                                ]
                              },
                              "showPin": true,
                              "name": "Alerts for severity",
                              "styleSettings": {
                                "margin": "-10px 0px 0px 0px"
                              }
                            }
                          ],
                          "exportParameters": true
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "Severity",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "alert-details-group",
                        "styleSettings": {
                          "margin": "0px 0px 0px 0px"
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({IoTHub}) or properties.essentials.targetResource in~ ({IoTHub})\r\n| summarize Alerts=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\")\r\nby Resource=tostring(properties.essentials.targetResource )\r\n| order by Alerts desc\r\n",
                          "size": 0,
                          "title": "Alerts by Region",
                          "noDataMessage": "No alerts",
                          "noDataMessageStyle": 3,
                          "exportMultipleValues": true,
                          "exportAggregateParts": true,
                          "exportedParameters": [
                            {
                              "parameterName": "Selected",
                              "parameterType": 1,
                              "quote": ""
                            }
                          ],
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "map",
                          "gridSettings": {
                            "rowLimit": 1000
                          },
                          "mapSettings": {
                            "locInfo": "AzureResource",
                            "locInfoColumn": "Resource",
                            "sizeSettings": "Alerts",
                            "sizeAggregation": "Sum",
                            "defaultSize": 0,
                            "legendMetric": "Alerts",
                            "legendAggregation": "Sum",
                            "itemColorSettings": {
                              "nodeColorField": "Alerts",
                              "colorAggregation": "Sum",
                              "type": "heatmap",
                              "heatmapPalette": "greenRed"
                            }
                          }
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "Severity",
                          "comparison": "isEqualTo"
                        },
                        "showPin": true,
                        "name": "Alerts map",
                        "styleSettings": {
                          "margin": "0px 0px 0px 0px"
                        }
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Subscription",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "visible if subscriptions selected"
                }
              ],
              "exportParameters": true
            },
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isEqualTo",
              "value": "alerts"
            },
            "name": "alerts-group",
            "styleSettings": {
              "margin": "15px 0px"
            }
          }
        ],
        "exportParameters": true
      },
      "conditionalVisibility": {
        "parameterName": "InsightsMetricsExists",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "name": "device-group",
      "styleSettings": {
        "margin": "-20px 0px"
      }
    }
  ],
  "fallbackResourceIds": [
    ""
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}