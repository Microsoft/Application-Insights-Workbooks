{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Vulnerability Assessment Findings (Preview)"
      },
      "name": "Headline"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "206f87e8-2616-4d26-a94f-a97eb4cee619",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "description": "Select Subscription",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": true,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "ae1f45ba-9275-44fe-a0b0-0f60ab5a8690",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "label": "Show Help",
            "type": 10,
            "description": "Toggle to show Help for each tab",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n { \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }\r\n]"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "#### Welcome to Server and Container Registry Vulnerabilities workbook (preview)\r\nThis workbook is based on the following recommendations provided by Azure Security Center:\r\n* [Vulnerabilities in your virtual machines should be remediated](http://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/1195afff-c881-495e-9bc5-1486211ae03f)\r\n* [Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys)](http://portal.azure.com/#blade/Microsoft_Azure_Security/RecommendationsBlade/assessmentKey/dbd0cb49-b563-45e7-9724-889e799fa648)",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "Help",
        "comparison": "isEqualTo",
        "value": "Yes"
      },
      "name": "Help"
    },
    {
      "type": 1,
      "content": {
        "json": "---"
      },
      "name": "text - 2"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "81073874-f7e3-4b99-9bb2-6fac88e2b726",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "OverviewTab",
            "style": "link"
          },
          {
            "id": "414bfeff-09a7-499e-95fc-c3adbf05dff5",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Servers",
            "subTarget": "ServersTab",
            "style": "link"
          },
          {
            "id": "d835a04d-17a7-4e50-b77a-9a8f0a8b3fba",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Containers",
            "subTarget": "ACRTab",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 1,
      "content": {
        "json": "---"
      },
      "name": "text - 2 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| project ResourceType=tostring(split(id,\"/\").[6]), ResourceName=tostring(properties.resourceDetails.id)\r\n| summarize Count=dcount(ResourceName) by ResourceType",
        "size": 4,
        "title": "Servers | Count of unhealthy Azure VMs and Azure Arc",
        "noDataMessage": "No unhealthy VMs found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceType",
              "formatter": 16,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ]
        },
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ResourceType",
            "formatter": 7,
            "formatOptions": {
              "linkTarget": "Resource"
            }
          },
          "leftContent": {
            "columnMatch": "count",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true,
          "sortCriteriaField": "ResourceType",
          "sortOrderField": 1,
          "size": "auto"
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "ResourceType",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "count",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "mapSettings": {
          "locInfo": "LatLong",
          "sizeSettings": "count",
          "sizeAggregation": "Sum",
          "legendMetric": "count",
          "legendAggregation": "Sum",
          "itemColorSettings": {
            "type": "heatmap",
            "colorAggregation": "Sum",
            "nodeColorField": "count",
            "heatmapPalette": "greenRed"
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "Overview-VMCount"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n| project ResourceType=tolower(split(id,\"/\").[6]), resourceName=tolower(split(id,\"/\").[8]), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count=dcount(resourceName) by ResourceType",
        "size": 4,
        "title": "ACR | Count of unhealthy registries",
        "noDataMessage": "No unhealthy registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "ResourceType",
              "formatter": 16,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ]
              }
            }
          ]
        },
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "Overview-ContainerCount"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count = dcount(VulId) by Severity",
        "size": 1,
        "title": "Servers | Count of vulnerabilities by severity",
        "noDataMessage": "No unhealthy VMs found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "Low",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "Overview-ServersPie"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n| extend VulId = tostring(properties.id), Severity = tostring(properties.status.severity), Status = tostring(properties.status.code)\r\n| where Status == 'Unhealthy'\r\n| summarize Count = dcount(VulId) by Severity",
        "size": 1,
        "title": "ACR Images | Count of vulnerabilities by severity",
        "noDataMessage": "No unhealthy registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "piechart",
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Column1",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "IncidentCount",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "seriesLabelSettings": [
            {
              "seriesName": "Medium",
              "color": "yellow"
            },
            {
              "seriesName": "High",
              "color": "redBright"
            },
            {
              "seriesName": "Unknown",
              "color": "blueDark"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "Overview-ContainersPie"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| project Resource = tostring(properties.resourceDetails.id), subscriptionId, Severity = tostring(properties.status.severity), Status = tostring(properties.status.code), VulnId = tostring(properties.id)\r\n| where Status == 'Unhealthy'\r\n| summarize dcount(VulnId) by Resource, Severity, VulnId\r\n| summarize sevH=countif(Severity=='High'), sevM=countif(Severity=='Medium'), sevL=countif(Severity=='Low'), Total=count(Severity) by Resource\r\n| order by sevH desc",
        "size": 0,
        "title": "Servers | Count of vulnerabilities by severity per resource",
        "noDataMessage": "No unhealthy VMs found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              },
              "tooltipFormat": {
                "tooltip": "[\"Total\"] fndings in total"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "redBright",
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 5
            }
          ],
          "rowLimit": 500,
          "labelSettings": [
            {
              "columnId": "Resource"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "Overview - ServerTable"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n| project Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), subscriptionId, Severity = tostring(properties.status.severity), Status = tostring(properties.status.code), VulnId = tostring(properties.id)\r\n| where Status == 'Unhealthy'\r\n| summarize dcount(VulnId) by Resource, Severity, VulnId\r\n| summarize sevH=countif(Severity=='High'), sevM=countif(Severity=='Medium'), sevL=countif(Severity=='Low') by Resource\r\n| order by sevH desc",
        "size": 0,
        "title": "ACR | Count of vulnerabilities by severity per repository",
        "noDataMessage": "No unhealthy registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "22ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "redBright",
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "yellow",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blueDark",
                "customColumnWidthSetting": "15ch"
              }
            }
          ],
          "labelSettings": [
            {
              "columnId": "Resource"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "OverviewTab"
      },
      "customWidth": "50",
      "name": "Overview - ACRTable"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n | project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve\r\n | where status != 'Healthy' and ResourceType == 'microsoft.compute'\r\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description, tostring(patchable), tostring(cve)\r\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by ResourceGroup, Resource\r\n | order by sevH desc",
        "size": 0,
        "title": "Servers overview",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "red",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "Resource"
            },
            {
              "columnId": "Total"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            },
            {
              "columnId": "patchAvailable",
              "label": "Patch Available"
            },
            {
              "columnId": "CVEcount",
              "label": "CVEs"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ServersTab"
      },
      "customWidth": "50",
      "name": "ServersSummary"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| extend Category = tostring(properties.category), Status = tostring(properties.status.code)\r\n| where Status != 'Healthy'\r\n| summarize count() by tostring(Category)",
        "size": 1,
        "title": "Servers | Count vulnerabilities by category",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "tiles",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 14,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "red",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true
          }
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Category",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ServersTab"
      },
      "customWidth": "50",
      "name": "ServersCategoryTiles"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Servers recommendations list",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"1195afff-c881-495e-9bc5-1486211ae03f\"\r\n| project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve, category = tostring(properties.category), timeGenerated = tostring(properties.timeGenerated), remediation = tostring(properties.remediation), impact = tostring(properties.impact), threat = tostring(properties.additionalData.threat)\r\n| where status == 'Unhealthy'\r\n| project severity, VulnId, description, tostring(patchable), category, Resource, ResourceGroup, tostring(cve), timeGenerated, remediation, impact, threat",
              "size": 2,
              "title": "The search box can be used to filter recommendations (Resource, ResourceGroup, CVE, VulnID, Severity, Keywords, etc)",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blueDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "severity",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 6
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "severity"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "severity"
                },
                "sortBy": [
                  {
                    "itemKey": "$gen_thresholds_$gen_group_0",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_thresholds_$gen_group_0",
                  "sortOrder": 1
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "ServersTab"
            },
            "name": "Servers - FullListTable"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ServersTab"
      },
      "name": "group - 17"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n| where type == \"microsoft.security/assessments/subassessments\"\r\n| extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n| where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n| extend Category = tostring(properties.category), Status = tostring(properties.status.code)\r\n| where Status != 'Healthy'\r\n| summarize count() by tostring(Category)",
        "size": 4,
        "title": "Count of vulnerabilities by category",
        "noDataMessage": "No unhealthy registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Category",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "count_",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ACRTab"
      },
      "name": "ACRCategoryTiles"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n | project Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve\r\n | where status == 'Unhealthy' and ResourceType == 'microsoft.containerregistry'\r\n | summarize dcount(VulnId) by ResourceGroup, Resource, severity, VulnId, description, tostring(patchable), tostring(cve)\r\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by ResourceGroup, Resource\r\n | order by sevH desc",
        "size": 0,
        "title": "Azure Container Registries",
        "noDataMessage": "No unhealthy registries found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "red",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "15ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "ResourceGroup"
            ],
            "expandTopLevel": true,
            "finalBy": "Resource"
          },
          "labelSettings": [
            {
              "columnId": "ResourceGroup",
              "label": "Resource Group"
            },
            {
              "columnId": "Resource"
            },
            {
              "columnId": "Total"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            },
            {
              "columnId": "patchAvailable",
              "label": "Patch Available"
            },
            {
              "columnId": "CVEcount",
              "label": "CVEs"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ACRTab"
      },
      "customWidth": "50",
      "name": "Containers - ACR Repos Table"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n | project Resource = tolower(extract(@'(?i)(.*?)/providers/Microsoft.Security/([^/]+)', 1, id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve, Repo = tostring(parse_json(properties.additionalData).repositoryName), imageDigest = tostring(parse_json(properties.additionalData).imageDigest)\r\n | where status == 'Unhealthy' and ResourceType == 'microsoft.containerregistry'\r\n | summarize dcount(VulnId) by Resource, severity, VulnId, description, tostring(patchable), tostring(cve), Repo, imageDigest\r\n | summarize Total = count(dcount_VulnId), sevH=countif(severity=='High'), sevM=countif(severity=='Medium'), sevL=countif(severity=='Low'), patchAvailable = countif(patchable=='true'), CVEcount =countif(cve!='[]') by Resource, Repo, imageDigest\r\n | order by sevH desc",
        "size": 0,
        "title": "Vulnerable images found",
        "noDataMessage": "No vulnerable images found",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true,
                "customColumnWidthSetting": "25ch"
              }
            },
            {
              "columnMatch": "Resource",
              "formatter": 5,
              "formatOptions": {
                "customColumnWidthSetting": "20ch"
              }
            },
            {
              "columnMatch": "Repo",
              "formatter": 5
            },
            {
              "columnMatch": "imageDigest",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "18ch"
              }
            },
            {
              "columnMatch": "Total",
              "formatter": 1,
              "formatOptions": {
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevH",
              "formatter": 4,
              "formatOptions": {
                "palette": "red",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevM",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "sevL",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark",
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "patchAvailable",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "pending",
                    "text": "{0}{1}"
                  }
                ],
                "compositeBarSettings": {
                  "labelText": "",
                  "columnSettings": []
                },
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "CVEcount",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "4",
                    "text": "{0}{1}"
                  }
                ],
                "customColumnWidthSetting": "10ch"
              }
            },
            {
              "columnMatch": "ResourceGroup",
              "formatter": 5
            }
          ],
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Resource"
            ],
            "expandTopLevel": true,
            "finalBy": "Repo"
          },
          "labelSettings": [
            {
              "columnId": "Resource"
            },
            {
              "columnId": "Repo"
            },
            {
              "columnId": "imageDigest",
              "label": "Image Digest"
            },
            {
              "columnId": "Total"
            },
            {
              "columnId": "sevH",
              "label": "High"
            },
            {
              "columnId": "sevM",
              "label": "Medium"
            },
            {
              "columnId": "sevL",
              "label": "Low"
            },
            {
              "columnId": "patchAvailable",
              "label": "Patch Available"
            },
            {
              "columnId": "CVEcount",
              "label": "CVEs"
            }
          ]
        },
        "sortBy": []
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ACRTab"
      },
      "customWidth": "50",
      "name": "Containers - ACRImages Table"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "ACR vulnerabilities recommendations list",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n | where type == \"microsoft.security/assessments/subassessments\"\r\n | extend assessmentKey = extract(\".*assessments/(.+?)/.*\",1,  id)\r\n | where assessmentKey == \"dbd0cb49-b563-45e7-9724-889e799fa648\"\r\n | project Resource = extract(\"([\\\\s\\\\S]*?)(/providers/Microsoft.Security.*)\",1,id), ResourceGroup = trim_end(\"/\",extract(\".*resourceGroups/(.+?)/\",0,id)), ResourceType = tolower(split(id,\"/\").[6]), subscriptionId, severity = tostring(parse_json(properties).status.severity), status = tostring(parse_json(properties).status.code), VulnId = tostring(parse_json(properties).id), description = tostring(parse_json(properties).displayName), patchable = parse_json(properties.additionalData).patchable, cve = parse_json(properties.additionalData).cve, category = tostring(properties.category), timeGenerated = tostring(properties.timeGenerated), impact = tostring(properties.impact), Repo = tostring(parse_json(properties.additionalData).repositoryName), imageDigest = tostring(parse_json(properties.additionalData).imageDigest)\r\n | where status == 'Unhealthy' and ResourceType == 'microsoft.containerregistry'\r\n | project severity, VulnId, description, tostring(patchable), category, Resource, ResourceGroup, Repo, imageDigest, tostring(cve), timeGenerated, impact",
              "size": 2,
              "title": "The search box can be used to filter recommendations (Resource, ResourceGroup, CVE, VulnID, Severity, Keywords, etc)",
              "noDataMessage": "No unhealthy registries and images found",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "red",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "blueDark",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "severity",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "timeGenerated",
                    "formatter": 6
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "severity"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "severity"
                },
                "sortBy": [
                  {
                    "itemKey": "patchable",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "patchable",
                  "sortOrder": 2
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "ACRTab"
            },
            "name": "Containers - FullListTable"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "ACRTab"
      },
      "name": "Containers - ACR Vulnerabilities Table"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}